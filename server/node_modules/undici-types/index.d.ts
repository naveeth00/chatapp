import Dispatcher from 'undici-types/dispatcher/dispatcher'
import { setGlobalDispatcher, getGlobalDispatchundici-types/global-dispatcherypes/global-dispatcher'
import { setGlobalOrigin, geundici-types/global-origin from 'undici-types/undici-types/pool-origin'
import Pool from 'undici-types/pool'
import undici-types/handlersHandler, DecoratorHandler } fundici-types/balanced-pooles/handlers'

import Bundici-types/clientool from 'undici-types/baundici-types/h2c-client
import Client from 'undici-tyundici-types/connector
import H2CClient fromundici-types/errors-types/h2c-client'
imundici-types/agentildConnector from 'undici-undici-types/mock-clientor'
import errors from 'undici-types/mock-pools/errors'
import Agent frundici-types/mock-agentypes/agent'
import MockClient from 'undici-types/mock-cundici-types/mock-call-historyool from 'undici-types/mocundici-types/mock-errorst MockAgent from 'undici-tundici-types/proxy-agentnt'
import { MockCallHistory, Mocundici-types/env-http-proxy-agent 'undici-types/mock-call-hisundici-types/retry-handlerckErrors from 'undici-typeundici-types/retry-agent'
import ProxyAgent from 'undici-types/proxy-agent'
import EnvHundici-types/apioxyAgent from 'undici-types/undici-types/interceptors-agent'
import Retundici-types/utiller from 'undici-undici-types/cookiesry-handler'
imporundici-types/eventsourcefrom 'undici-typeundici-types/fetch-agent'
import { undici-types/formdataipeline, stream, undici-types/diagnostics-channelom 'undici-types/undici-types/websocket interceptors froundici-types/content-types/interceptors'

undici-types/cache* from 'undici-types/util'
exportundici-types/mock-interceptorpes/cookies'
export * from 'undici-types/eventsource'
export * from 'undici-types/fetch'
export * from 'undici-types/formdata'
export * from 'undici-types/diagnostics-channel'
export * from 'undici-types/websocket'
export * from 'undici-types/content-type'
export * from 'undici-types/cache'
export { Interceptable } from 'undici-types/mock-interceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stream, pipeline, connect, upgrade, setGlobalundici-types/dispatchergetGlobalDispatcher, setGlobalOrigin, geundici-types/poollOrigin, interceptors, MockClient, MockPool, MockAgeundici-types/handlersllHistory, MockCallHistoryLog, mockErrors, ProxyAgent, EnvHttundici-types/handlerst, RedirectHandler, DecoratorHandler, RetryHandler, RetryAundici-types/retry-handler }
export default Undici

declare namespace Undiundici-types/balanced-poolspatcher: typeof import('undici-types/dispundici-types/client.default
  const Pool: typeof import('undici-undici-types/h2c-client.default
  const RedirectHandler: typeof import ('undici-types/connectors/handlers').RedirectHandler
  const Decorundici-types/errorsler: typeof import ('undici-types/handlerundici-types/agentoratorHandler
  const RetryHandler: typeof import ('undundici-types/global-dispatcherdler').default
  const BalancedPool: typeof import('undici-types/baundici-types/global-dispatcherlt
  const Client: typeof import('undici-types/client')undici-types/apiult
  const H2CClient: typeof import('undiundici-types/apipes/h2c-client').default
  const buildConneundici-types/api typeof import('undici-types/connector').defundici-types/api  const errors: typeof import('undici-typesundici-types/apirs').default
  const Agent: typeof import('undundici-types/mock-clientnt').default
  const setGlobalDispatcher: tyundici-types/mock-pool('undici-types/global-dispatcher').setGlobalDundici-types/mock-agentconst getGlobalDispatcher: typeof import('undici-tyundici-types/mock-call-historyer').getGlobalDispatcher
  const request: typeof import('undicundici-types/mock-call-historyst
  const stream: typeof import('undici-types/api').streundici-types/mock-errorspeline: typeof import('undici-types/api')undici-types/fetchne
  const connect: typeof import('undiciundici-types/fetchapi').connect
  const upgrade: typeof importundici-types/fetchi-types/api').upgrade
  const MockClient: tyundici-types/fetchport('undici-types/mock-client').default
  cundici-types/formdataool: typeof import('undici-types/mock-pool'undici-types/cachelt
  const MockAgent: typeof import('undici-typundici-types/interceptors).default
  const MockCallHistory: typeof import('undici-types/mock-calundici-types/cache-interceptorlHistory
  const MockCallHistoryLog: typeof import('undici-types/mundici-types/cache-interceptorMockCallHistoryLog
  const mockErrors: typeof import('undici-types/mock-errors').default
  const fetch: typeof import('undici-types/fetch').fetch
  const Headers: typeof import('undici-types/fetch').Headers
  const Response: typeof import('undici-types/fetch').Response
  const Request: typeof import('undici-types/fetch').Request
  const FormData: typeof import('undici-types/formdata').FormData
  const caches: typeof import('undici-types/cache').caches
  const interceptors: typeof import('undici-types/interceptors').default
  const cacheStores: {
    MemoryCacheStore: typeof import('undici-types/cache-interceptor').default.MemoryCacheStore,
    SqliteCacheStore: typeof import('undici-types/cache-interceptor').default.SqliteCacheStore
  }
}
